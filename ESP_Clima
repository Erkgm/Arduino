#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

#define DHTPIN 15
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

LiquidCrystal_I2C lcd(0x27, 16, 2);

#define RELAY_PIN 27
#define TEMP_LIMITE 20.0

unsigned long tempoAnterior = 0;
const long intervalo = 3000;

void setup() {
  Serial.begin(9200);
  delay(2000);  // Atraso para estabilizar comunicação serial
  Serial.println("Iniciando...");

  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, HIGH); // Relé inicia DESLIGADO

  lcd.init();
  lcd.backlight();
  lcd.print("Iniciando...");
  delay(2000);
  lcd.clear();

  dht.begin();
}

void loop() {
  unsigned long tempoAtual = millis();

  if (tempoAtual - tempoAnterior >= intervalo) {
    tempoAnterior = tempoAtual;

    float temperature = dht.readTemperature();
    float humidity = dht.readHumidity();

    if (isnan(temperature) || isnan(humidity)) {
      Serial.println("Erro: Falha no sensor DHT11!");
      lcd.clear();
      lcd.print("Erro no Sensor");
      return;
    }

    Serial.print("Temperatura: ");
    Serial.print(temperature);
    Serial.print(" C | Umidade: ");
    Serial.print(humidity);
    Serial.println(" %");

    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Temp: ");
    lcd.print(temperature);
    lcd.print(" C");
    lcd.setCursor(0, 1);
    lcd.print("Umid: ");
    lcd.print(humidity);
    lcd.print(" %");

    // Controle do relé (ajustar conforme necessidade)
    if (temperature > TEMP_LIMITE) {
      digitalWrite(RELAY_PIN, LOW);   // Se ligar errado, trocar para HIGH
      Serial.println("Relé LIGADO!");
    } else {
      digitalWrite(RELAY_PIN, HIGH);  // Se desligar errado, trocar para LOW
      Serial.println("Relé DESLIGADO!");
    }
  }
}
